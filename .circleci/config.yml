version: 2.1

orbs:
    node: circleci/node@3.0.0

jobs:
    e2e-test:
        environment:
            CC_TEST_REPORTER_ID: af54080dae6a24b0ed28e7ed6b11493deee4dde8368c9dc8a678ec52e0a3e4ec
        docker:
            - image: cimg/node:14.17.5
              environment:
                  DATABASE_HOST: localhost
                  DATABASE_PORT: 5432
                  DATABASE_NAME: api_auth_poc_test
                  DATABASE_USERNAME: api_auth_poc_app
                  DATABASE_PASSWORD: api_auth_poc_app
                  DATABASE_SYNC: true
            - image: postgres:12.4-alpine
              environment:
                  POSTGRES_DB: api_auth_poc_test
                  POSTGRES_USER: api_auth_poc_app
                  POSTGRES_PASSWORD: api_auth_poc_app
        steps:
            - checkout
            - restore_cache:
                  name: Restore Yarn Package Cache
                  keys:
                      - yarn-packages-{{ checksum "yarn.lock" }}
            - run:
                  name: Install Dependencies
                  command: yarn install --immutable
            - save_cache:
                  name: Save Yarn Package Cache
                  key: yarn-packages-{{ checksum "yarn.lock" }}
                  paths:
                      - ~/.cache/yarn
            - run:
                  name: Install Code Climate Test Reporter
                  command: |
                      curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
                      chmod +x ./cc-test-reporter
            - run: ./cc-test-reporter before-build
            - run:
                  name: Run End to End Tests
                  command: make e2e_coverage
            - run: ./cc-test-reporter format-coverage coverage-e2e/lcov.info -t lcov -o "coverage-e2e/codeclimate.$CIRCLE_NODE_INDEX.json"
            - run: ./cc-test-reporter sum-coverage --output - coverage-e2e/codeclimate.*.json | ./cc-test-reporter upload-coverage --debug --input -
            - store_test_results:
                  path: /tmp/test-results
            - store_artifacts:
                  path: /tmp/test-results
                  when: always

    unit-test:
        environment:
            CC_TEST_REPORTER_ID: fec45d2aafa9cb5ad43f0c2bbf587929ddac111d1d9fb1e5b8bb66041f04ff34
        docker:
            - image: cimg/node:14.17.5
              environment:
                  DATABASE_HOST: localhost
                  DATABASE_PORT: 5432
                  DATABASE_NAME: api_auth_poc_test
                  DATABASE_USERNAME: api_auth_poc_app
                  DATABASE_PASSWORD: api_auth_poc_app
                  DATABASE_SYNC: true
            - image: postgres:12.4-alpine
              environment:
                  POSTGRES_DB: api_auth_poc_test
                  POSTGRES_USER: api_auth_poc_app
                  POSTGRES_PASSWORD: api_auth_poc_app
        steps:
            - checkout
            - restore_cache:
                  name: Restore Yarn Package Cache
                  keys:
                      - yarn-packages-{{ checksum "yarn.lock" }}
            - run:
                  name: Install Dependencies
                  command: yarn install --immutable
            - save_cache:
                  name: Save Yarn Package Cache
                  key: yarn-packages-{{ checksum "yarn.lock" }}
                  paths:
                      - ~/.cache/yarn
            - run:
                  name: Run Unit Tests
                  command: make unit_test
            - run:
                  name: Setup Code Climate test-reporter
                  command: |
                      curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
                      chmod +x ./cc-test-reporter
                      ./cc-test-reporter before-build
            - run:
                  name: Run Tests
                  command: |
                      mkdir coverage
                      yarn test:cov
                      ./cc-test-reporter after-build -t lcov

    check_licenses:
        working_directory: /home/circleci/typescript-api-auth-poc
        docker:
            - image: cimg/node:14.17.0
        steps:
            - checkout
            - restore_cache:
                  name: Restore Yarn Package Cache
                  keys:
                      - yarn-packages-{{ checksum "yarn.lock" }}
            - run:
                  name: Install Dependencies
                  command: yarn install --immutable
            - save_cache:
                  name: Save Yarn Package Cache
                  key: yarn-packages-{{ checksum "yarn.lock" }}
                  paths:
                      - ~/.cache/yarn
            - run:
                  name: Install Dependencies
                  command: |
                      curl -H 'Cache-Control: no-cache' https://raw.githubusercontent.com/fossas/spectrometer/master/install.sh | bash
            - run:
                  name: Run FOSSA
                  command: ./scripts/run_fossa.sh
                  no_output_timeout: 30m

workflows:
    api-auth-poc-flow:
        jobs:
            - unit-test
            - e2e-test
            - check_licenses:
                  context:
                      - fossa
